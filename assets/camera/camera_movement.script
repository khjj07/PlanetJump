local DefRX= require "DefUtil.DefRX.DefRX"
local rendercam = require "rendercam.rendercam"
local PARTITION = 50
go.property("initial_ortho_scale", 3)
go.property("play_ortho_scale", 8)
go.property("zoom", 5)

function init(self)
	DefRX.create_stream("landing")
	DefRX.create_stream("floating")
	DefRX.create_stream("camera_view")
	DefRX.observe(self, "landing", function(self, message_id, message,sender)
		go.cancel_animations(".", "position")
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, message.position, go.EASING_OUTBACK, 0.5)
	end)
	DefRX.observe(self, "floating", function(self, message_id, message,sender)
		go.cancel_animations(".", "position")
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, message.position, go.EASING_OUTBACK, 0.5)
	end)
	DefRX.create_stream("game_start")
	rendercam.set_ortho_scale(self.initial_ortho_scale)
	DefRX.observe(self, "game_start", function(self, message_id, message,sender)
		go.animate("#", "zoom", go.PLAYBACK_ONCE_FORWARD, self.play_ortho_scale, go.EASING_OUTBOUNCE, 0.3)
	end)
	DefRX.create_stream("strong_hit")
	DefRX.observe(self, "strong_hit", function(self, message_id, message,sender)
		rendercam.shake(200, 0.5, go.get_id())
	end)
	DefRX.create_stream("weak_hit")
	DefRX.observe(self, "weak_hit", function(self, message_id, message,sender)
		rendercam.shake(100, 0.3, go.get_id())
	end)
	DefRX.create_stream("move_cam")
	DefRX.observe(self, "move_cam", function(self, message_id, message,sender)
		go.animate(".", "position", message.playback or go.PLAYBACK_ONCE_FORWARD,  go.get_position()+message.position, message.easing or go.EASING_LINEAR, message.duration or 1, message.delay or 0,message.func)
	end)
end

function update(self, dt)
	rendercam.set_ortho_scale(self.zoom)
end
function on_message(self, message_id, message, sender)
	DefRX.on_message(self, message_id, message, sender)
end
