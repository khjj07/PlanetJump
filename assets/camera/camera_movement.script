local DefRX= require "DefUtil.DefRX.DefRX"
local rendercam = require "rendercam.rendercam"
function init(self)
	DefRX.create_stream("update_planet")
	DefRX.create_stream("floating")
	DefRX.create_stream("camera_view")
	DefRX.observe(self, "update_planet", function(self, message_id, message,sender)
		go.cancel_animations(".", "position")
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, message.position, go.EASING_OUTBACK, 0.5)
	end)
	DefRX.observe(self, "floating", function(self, message_id, message,sender)
		go.cancel_animations(".", "position")
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, message.position, go.EASING_OUTBACK, 0.5)
	end)
	DefRX.create_stream("game_start")
	DefRX.observe(self, "game_start", function(self, message_id, message,sender)
		for i = 1, 30 do
			timer.delay(0.01*i, false, function(self,handle,time_elapsed)
				print(rendercam.get_ortho_scale()+0.01*i)
				rendercam.set_ortho_scale(rendercam.get_ortho_scale()+0.01*i, go.get_id())
			end)
		end
	end)
end
function update(self,dt)
	--rendercam.world_to_screen(pos, adjust, raw)
end



function on_message(self, message_id, message, sender)
	DefRX.on_message(self, message_id, message, sender)
end
