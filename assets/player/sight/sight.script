local INITIAL_SCALE=2000
local MIN_SCALE=200
local REDUCED_DURATION=3
local RECOVERY_DURATION=1
local defrx= require "defrx.defrx"
function init(self)
	defrx.create_stream("asphyxiation")
	defrx.observe(self, "asphyxiation", function(self, message_id, message)
		go.cancel_animations(".", "scale")
		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD,MIN_SCALE, go.EASING_OUTCIRC, REDUCED_DURATION)
		self.dead_timer = timer.delay(REDUCED_DURATION+0.4, false, function()
			defrx.notify("game_over")
			defrx.notify("player_dead")
		end)
	end)
	defrx.create_stream("breathing")
	defrx.observe(self, "breathing", function(self, message_id, message)
		go.cancel_animations(".", "scale")
		if self.dead_timer then
			timer.cancel(self.dead_timer)
		end
		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD,INITIAL_SCALE, go.EASING_LINEAR, RECOVERY_DURATION)
	end)
	go.set_scale(INITIAL_SCALE)
end


function on_message(self, message_id, message, sender)
	defrx.on_message(self, message_id, message, sender)
end

function final(self)
	defrx.cancel_all_observing(self)
end