local MAX_DISTANCE = 5000
local defrx= require "defrx.defrx"
local global=require "global"
go.property("p1", hash(""))
go.property("p2", hash(""))


function init(self)
	go.set_scale(2)
	go.set("#sprite", "tint.w", 0.5)
	particlefx.play("#twinkle")
	msg.post(self.p1, "add_ring",{id=go.get_id()})
	msg.post(self.p2, "add_ring",{id=go.get_id()})
end

function on_message(self, message_id, message, sender)
	if message_id==hash("planet_final") then
		if tostring(message.id)==tostring(self.p1) then
			msg.post(self.p2, "remove_ring",{id=go.get_id()})
			go.delete()
		elseif tostring(message.id)==tostring(self.p2) then
			msg.post(self.p1, "remove_ring",{id=go.get_id()})
			go.delete()
		end
	end
	if message_id==hash("trigger_response") then
		if global.target_planet==self.p1 then
			global.target_planet=self.p2
			msg.post(self.p2, "remove_ring",{id=go.get_id()})
			msg.post(self.p1, "remove_ring",{id=go.get_id()})
			go.delete()
		elseif global.target_planet==self.p2 then
			global.target_planet=self.p1
			msg.post(self.p2, "remove_ring",{id=go.get_id()})
			msg.post(self.p1, "remove_ring",{id=go.get_id()})
			go.delete()
		else
			global.target_planet=nil
		end
	end
end

function final(self)
	defrx.cancel_all_observing(self)
end