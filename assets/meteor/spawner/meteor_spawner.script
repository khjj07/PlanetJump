local DefRX= require "DefUtil.DefRX.DefRX"
go.property("target", hash(""))
go.property("min_scale", 200)
go.property("max_scale", 300)
go.property("min_distance", 0)
go.property("max_distance", 100)
go.property("min_distance", 0)
go.property("max_speed", 2000)
go.property("min_speed", 1000)

local OUTER_RANGE = 5000
local INNER_RANGE = 500
local DISTANCE_RANGE = 200
local SPAWN_MIN = 3
local SPAWN_MAX = 5
local MAX_RETRY = 500

local function check_spawnable(self,new_meteor)
	for _, planet in pairs(self.planet) do
		local distance = vmath.length(new_meteor.position-planet)
		if DISTANCE_RANGE > distance then
			return false
		end
	end
	return true
end

local function random_position_in_range(self)
	local pos = vmath.vector3()
	pos=pos+self.center
	local theta = math.pi/180*math.random(1,360)
	local radius = OUTER_RANGE+math.random(self.min_distance,self.max_distance)
	pos.x = pos.x + math.sin(theta)*radius
	pos.y = pos.y + math.cos(theta)*radius
	return pos
end

local function random_direction_in_range(self,from)
	local pos = vmath.vector3()
	pos=pos+self.center
	local theta = math.pi/180*math.random(1,360)
	local radius = INNER_RANGE*2+math.random(self.min_distance,self.max_distance)
	pos.x = pos.x + math.sin(theta)*radius
	pos.y = pos.y + math.cos(theta)*radius
	return vmath.normalize(pos-from)
end

local function spawn(self,center)
	local new_meteor={}
	new_meteor.position = random_position_in_range(self)
	new_meteor.scale = math.random(self.min_scale,self.max_scale)/100
	new_meteor.speed = math.random(self.min_speed,self.max_speed)
	new_meteor.direction= random_direction_in_range(self,new_meteor.position)
	local retry=0
	while retry<MAX_RETRY and not check_spawnable(self,new_meteor) do
		new_meteor.position = random_position_in_range(self) 
		new_meteor.scale = math.random(self.min_scale,self.max_scale)/100
		new_meteor.direction= random_direction_in_range(self,new_meteor.position)
		retry=retry+1
	end
	if retry~=MAX_RETRY then
		local prop = {
			direction = new_meteor.direction,speed=new_meteor.speed
		}
		local instance = factory.create("#meteor",new_meteor.position,nil,prop,new_meteor.scale)
		new_meteor.instance = instance
	end
end

local function spawn_routine(self,message_id, message, sender)
	timer.delay(3, false, function()
		spawn(self,self.center)
		spawn_routine(self,message_id, message, sender)
	end)
end


function set_center_position(self, message_id, message, sender)
	self.center=message.position
end

function update_planet(self, message_id, message, sender)
	self.planet=message
end

function init(self)
	math.randomseed(os.time())
	DefRX.create_stream("game_start")
	DefRX.observe(self, "game_start", spawn_routine)
	DefRX.create_stream("player")
	DefRX.observe(self, "player", set_center_position)
	DefRX.create_stream("planet")
	DefRX.observe(self, "planet", update_planet)
	self.planet={}
end



function on_message(self, message_id, message, sender)
	DefRX.on_message(self, message_id, message, sender)
end