local DefRX= require "DefUtil.DefRX.DefRX"
go.property("min_scale", 50)
go.property("max_scale", 100)
go.property("min_spawn_delay", 1)
go.property("max_spawn_delay", 3)
go.property("min_meteor_spead", 50)
go.property("max_meteor_speed", 100)

local LEVEL=2;
local MAX_RETRY = 500
local MIN_DEFAULT_RANGE=1500
local MAX_DEFAULT_RANGE=2000

function check_spawnable(self,new_meteor)
	new_meteor.min_range=MIN_DEFAULT_RANGE
	new_meteor.max_range=MAX_DEFAULT_RANGE
	for _, meteor in pairs(self.meteor) do
		--생성지점에 아무것도 없는 상태
	end
	return true
end

function random_position_in_range(self,center)
	local pos = vmath.vector3()
	pos=pos+center.position
	local theta = math.pi/180*math.random(1,360)
	local radius = math.random(MIN_DEFAULT_RANGE,MAX_DEFAULT_RANGE)*2
	pos.x = pos.x + math.sin(theta)*radius
	pos.y = pos.y + math.cos(theta)*radius
	return pos
end

function spawn(self,center)
	local new_meteor={}
	new_meteor.position = random_position_in_range(self,center)
	new_meteor.scale = math.random(self.min_scale,self.max_scale)/100
	local retry=0
	while retry<MAX_RETRY and not check_spawnable(self,new_meteor) do
		new_meteor.position = random_position_in_range(self,center) 
		new_meteor.scale = math.random(self.min_scale,self.max_scale)/100
		retry=retry+1
	end
	if retry~=MAX_RETRY then
		local instance = collectionfactory.create("#meteor")
		new_meteor.instance = instance[hash("/meteor")]
		table.insert(self.meteor, new_meteor)
	end
end

function initialize(self, message_id, message, sender)
	self.player_pos=vmath.vector3()
	self.meteor={}
	for i = 1, math.random(LEVEL,LEVEL+5) do
		--local mouse_position = rendercam.screen_to_world_2d(action.screen_x,action.screen_y) --현재 마우스의 위치
		--spawn(self,--카메라위치)
	end
end

function remove_meteor(self, message_id, message, sender)
	for p, meteor in pairs(self.meteor) do
		if message.id == meteor.instance then
			table.remove(self.meteor,p)
			print("remove")
			break
		end
	end
	msg.post(sender, "dead_response")
end

function update(self, dt)
	print(#self.meteor)
end

function init(self)
	math.randomseed(os.time())
	DefRX.observe(self, "game_start", initialize)
	DefRX.observe(self, "spawn_meteor", spawn)
	DefRX.observe(self, "remove_meteor", remove_meteor)
end



function on_message(self, message_id, message, sender)
	DefRX.on_message(self, message_id, message, sender)
end




